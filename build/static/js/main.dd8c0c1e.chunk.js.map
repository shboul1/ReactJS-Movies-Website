{"version":3,"sources":["assets/tmovie.png","components/Header/Header.jsx","assets/footer-bg.jpg","components/Footer/Footer.jsx","components/Button/Button.jsx","api/APIConfig.js","api/axiosClient.js","api/tmdbAPI.js","components/Modal/Modal.jsx","components/HeroSlide/HeroSlide.jsx","components/MovieCard/MovieCard.jsx","components/MovieList/MovieList.jsx","pages/Home.jsx","components/page-header/PageHeader.jsx","components/MoviesGrid/MoviesGrid.jsx","pages/Catalog.jsx","pages/VideoList.jsx","components/MoviesCast/Cast.jsx","pages/Detail.jsx","config/Routes.jsx","App.js","index.js"],"names":["Header","headerRef","useRef","scrollTopRef","addShrinkClass","window","scrollY","current","classList","add","remove","scrollTopHeight","useEffect","addEventListener","className","ref","onClick","scrollTo","behavior","top","src","logo","alt","to","display","link","map","n","i","Footer","style","backgroundImage","footerimg","Button","children","btnstyle","STYLES","checkBtnStyles","includes","apiConfig","baseURL","apiKey","originalImage","imgPath","w500Image","imagePath","axiosClient","axios","create","headers","paramsSerializer","params","queryString","stringify","api_key","interceptors","request","use","a","config","response","data","error","category","movie","tv","movieType","upcoming","popular","top_rated","tvType","on_the_air","tmdbApi","getMoviesList","type","url","get","getTvList","getVideos","cate","id","search","detail","credits","similar","ModalContent","props","contentRef","parentNode","onClose","Modal","useState","active","setActive","HeroSlideItem","hisrory","useHistory","item","background","backdrop_path","poster_path","poster","setModalActive","videos","modal","document","querySelector","results","length","videSrc","key","setAttribute","innerHTML","toggle","title","overview","push","TrailerModal","iframeRef","width","height","HeroSlide","SwiperCore","Autoplay","movies","setMovies","getMovies","page","slice","console","log","modules","grabCursor","spaceBetween","slidesPerView","autoplay","delay","isActive","MovieCard","bg","name","MovieList","items","setItems","getList","Home","handleClick","PageHeader","footerbg","margin","MoviesGrid","setPage","inputValue","setInputValue","searchCatg","setSearchCatg","alert","loadMore","placeholder","onChange","e","target","value","filter","itemName","toLowerCase","Catalog","useParams","Video","video","offsetWidth","VideoList","setVideos","Cast","casts","setCasts","getCasts","cast","profile_path","Detail","setItem","getDetails","genres","genre","Routes","exact","path","App","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.dd8c0c1e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/tmovie.67797e94.png\";","import React, {useRef, useEffect} from 'react'\r\nimport logo from '../../assets/tmovie.png'\r\nimport {Link} from 'react-router-dom'\r\nimport './header.scss'\r\nconst Header = () => {\r\n    const headerNav = [\r\n        { display: 'Home', link: '/'},\r\n        { display: 'Movies', link: '/movies'},\r\n        { display: 'Tv Series', link: '/tvseries'},\r\n    ]\r\n    const headerRef = useRef(null)\r\n    const scrollTopRef = useRef(null)\r\n    const addShrinkClass = () => {\r\n        window.scrollY > 100 ? headerRef.current.classList.add('shrink') : headerRef.current.classList.remove('shrink')\r\n\r\n    }\r\n    const scrollTopHeight = () => {\r\n        if(window.scrollY > 150) {\r\n            scrollTopRef.current.classList.add('active')\r\n        } else {\r\n            scrollTopRef.current.classList.remove('active')\r\n        }\r\n    }\r\n    const scrollTop = () => {\r\n        window.scrollTo({\r\n            behavior: \"smooth\",\r\n            top: 0,\r\n        })\r\n    }\r\n    useEffect(() => {\r\n        window.addEventListener('scroll', addShrinkClass)\r\n        window.addEventListener('scroll', scrollTopHeight)\r\n    })\r\n    return (\r\n        <>\r\n        <div className=\"scroll-to-top\" ref={scrollTopRef} onClick={scrollTop}>\r\n        <i className=\"fas fa-chevron-up\"></i>\r\n        </div>\r\n        <div className='header' ref={headerRef}>\r\n            <div className=\"header__wrap container\">\r\n                <div className=\"logo\">\r\n                    <img src={logo} alt=\"\" />\r\n                    <Link to='/'>tMovies</Link>\r\n                </div>\r\n                <ul className=\"header__nav\"> \r\n                    {\r\n                        headerNav.map((n, i) => (\r\n                            <li key={i}>\r\n                                <Link to={n.link}>\r\n                                    {n.display}\r\n                                </Link>\r\n                            </li>\r\n                        ))\r\n                    }\r\n                </ul>\r\n            </div>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","export default __webpack_public_path__ + \"static/media/footer-bg.67e95f05.jpg\";","import React from 'react'\r\nimport footerimg from '../../assets/footer-bg.jpg'\r\nimport logo from '../../assets/tmovie.png'\r\nimport { Link } from 'react-router-dom'\r\nimport './Footer.scss'\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <div className='footer' style={{backgroundImage: `url(${footerimg})`}}>\r\n            <div className=\"logo\">\r\n                <img src={logo} alt=\"\" />\r\n                <Link to='/'>tMovies</Link>\r\n            </div>\r\n            <div className=\"footer__content__menus\">\r\n                    <div className=\"footer__content__menu\">\r\n                        <Link to=\"/\">Home</Link>\r\n                        <Link to=\"/\">Contact us</Link>\r\n                        <Link to=\"/\">Term of services</Link>\r\n                        <Link to=\"/\">About us</Link>\r\n                    </div>\r\n                    <div className=\"footer__content__menu\">\r\n                        <Link to=\"/\">Live</Link>\r\n                        <Link to=\"/\">FAQ</Link>\r\n                        <Link to=\"/\">Premium</Link>\r\n                        <Link to=\"/\">Pravacy policy</Link>\r\n                    </div>\r\n                    <div className=\"footer__content__menu\">\r\n                        <Link to=\"/\">You must watch</Link>\r\n                        <Link to=\"/\">Recent release</Link>\r\n                        <Link to=\"/\">Top IMDB</Link>\r\n                    </div>\r\n                </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\nimport \"./Button.scss\"\r\nconst Button = ({children, btnstyle, onClick}) => {\r\n    const STYLES = ['btn--primary', 'btn--outlined']\r\n    const checkBtnStyles = STYLES.includes(btnstyle) ? btnstyle : STYLES[0]\r\n    return (\r\n        <button className={`btn ${checkBtnStyles}`} onClick={onClick ? () => onClick() : null}>\r\n            {children}\r\n        </button>\r\n    )\r\n}\r\n\r\n\r\nexport default Button\r\n","const apiConfig = {\r\n    baseURL: 'https://api.themoviedb.org/3/',\r\n    apiKey: '849c171afc855cd0236ef6cf8325a19e',\r\n    originalImage: (imgPath) => `https://image.tmdb.org/t/p/original/${imgPath}`,\r\n    w500Image: (imagePath) => `https://image.tmdb.org/t/p/w500/${imagePath}`,\r\n}\r\n\r\nexport default apiConfig;\r\n","import axios from \"axios\";\r\nimport apiConfig from \"./APIConfig\";\r\nimport queryString from 'query-string'\r\n\r\nconst axiosClient = axios.create({\r\n    baseURL: apiConfig.baseURL,\r\n    headers: {\r\n        \"Content-Type\": \"application/json\"\r\n    },\r\n    paramsSerializer: params => queryString.stringify({...params, api_key: apiConfig.apiKey})\r\n})\r\n\r\naxiosClient.interceptors.request.use(async (config) => config);\r\naxiosClient.interceptors.response.use((response) => {\r\n    if(response && response.data) {\r\n        return response.data\r\n    }\r\n    return response;\r\n}, (error) => {\r\n    throw error;\r\n})\r\n\r\nexport default axiosClient;","import axiosClient from './axiosClient'\r\n\r\nexport const category = {\r\n    movie: 'movie',\r\n    tv: 'tv'\r\n}\r\n\r\nexport const movieType = {\r\n    upcoming: 'upcoming',\r\n    popular: 'popular',\r\n    top_rated: 'top_rated'\r\n}\r\n\r\nexport const tvType = {\r\n    popular: 'popular',\r\n    top_rated: 'top_rated',\r\n    on_the_air: 'on_the_air'\r\n}\r\n\r\nconst tmdbApi = {\r\n    getMoviesList: (type, params) => {\r\n        const url = 'movie/' + movieType[type];\r\n        return axiosClient.get(url, params);\r\n    },\r\n    getTvList: (type, params) => {\r\n        const url = 'tv/' + tvType[type];\r\n        return axiosClient.get(url, params);\r\n    },\r\n    getVideos: (cate, id) => {\r\n        const url = category[cate] + '/' + id + '/videos';\r\n        return axiosClient.get(url, {params: {}});\r\n    },\r\n    search: (cate, params) => {\r\n        const url = 'search/' + category[cate];\r\n        return axiosClient.get(url, params);\r\n    },\r\n    detail: (cate, id, params) => {\r\n        const url = category[cate] + '/' + id;\r\n        return axiosClient.get(url, params);\r\n    },\r\n    credits: (cate, id) => {\r\n        const url = category[cate] + '/' + id + '/credits';\r\n        return axiosClient.get(url, {params: {}});\r\n    },\r\n    similar: (cate, id) => {\r\n        const url = category[cate] + '/' + id + '/similar';\r\n        return axiosClient.get(url, {params: {}});\r\n    },\r\n}\r\n\r\nexport default tmdbApi;","import React, {useState, useEffect, useRef} from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport \"./Modal.scss\"\r\n\r\n\r\nconst Modal = props => {\r\n    const [active, setActive] = useState(false);\r\n    useEffect(() => {\r\n        setActive(props.active)\r\n    },[props.active])\r\n\r\n    return (\r\n        <div className={`modal ${active ? 'active' : ''}`} id={props.id}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport const ModalContent = props => {\r\n    const contentRef = useRef(null);\r\n    const closeModal = () => {\r\n        contentRef.current.parentNode.classList.remove('active');\r\n        if (props.onClose) props.onClose();\r\n    }\r\n    return (\r\n        <div ref={contentRef} className='modal__content'>\r\n            {props.children}\r\n            <div className=\"modal__content__close\" onClick={closeModal}>\r\n                <i className=\"fas fa-times\"></i>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\nModalContent.propTypes = {\r\n    onClose: PropTypes.func,\r\n\r\n}\r\nModal.propTypes = {\r\n    active: PropTypes.bool,\r\n    id: PropTypes.string,\r\n}\r\n\r\n\r\nexport default Modal;","import React, {useState, useEffect, useRef} from 'react'\r\nimport SwiperCore ,{ Autoplay } from 'swiper'\r\nimport {Swiper, SwiperSlide} from 'swiper/react'\r\nimport 'swiper/swiper-bundle.min.css'\r\nimport 'swiper/swiper.min.css'\r\nimport tmdbApi, {category, movieType} from '../../api/tmdbAPI'\r\nimport apiConfig from '../../api/APIConfig'\r\nimport Button from '../Button/Button'\r\nimport \"./HeroSlide.scss\"\r\nimport { useHistory } from 'react-router';\r\nimport Modal, { ModalContent } from '../Modal/Modal'\r\n\r\nconst HeroSlide = () => {\r\n    SwiperCore.use([Autoplay]);\r\n    const [movies, setMovies] = useState([])\r\n    useEffect(() => {\r\n        const getMovies = async () => {\r\n            const params = {page: 1}\r\n            try {\r\n                const response = await tmdbApi.getMoviesList(movieType.popular, {params});\r\n                setMovies(response.results.slice(1,10))\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n\r\n        }\r\n        getMovies();\r\n    },[])\r\n    return (\r\n        <div className=\"hero-slide\">\r\n            <Swiper\r\n                modules={[Autoplay]}\r\n                grabCursor={true}\r\n                spaceBetween={0}\r\n                slidesPerView={1}\r\n                autoplay={{delay: 3000}}>\r\n                {\r\n                    movies.map((item, i) => (\r\n                        <SwiperSlide key={i}>\r\n                            {({ isActive }) => (\r\n                                <HeroSlideItem item={item}/>\r\n                            )}\r\n                        </SwiperSlide>\r\n                    ))\r\n                }\r\n            </Swiper>\r\n           {\r\n               movies.map((item, i) => (\r\n                   <TrailerModal key={i} item={item} />\r\n               ))\r\n           }\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nconst HeroSlideItem = props => {\r\n    let hisrory = useHistory();\r\n    const item = props.item;\r\n    const background = apiConfig.originalImage(item.backdrop_path ? item.backdrop_path : item.poster_path)\r\n    const poster = apiConfig.w500Image(item.poster_path)\r\n\r\n    const setModalActive = async () => {\r\n        const videos = await tmdbApi.getVideos(category.movie, item.id)\r\n        const modal = document.querySelector(`#modal_${item.id}`)\r\n        if (videos.results.length > 0) {\r\n\r\n            const videSrc = 'https://www.youtube.com/embed/' + videos.results[0].key;\r\n            modal.querySelector('.modal__content > iframe').setAttribute('src', videSrc);\r\n\r\n        } else {\r\n            modal.querySelector('.modal__content > iframe').innerHTML = 'No trailer';\r\n        }\r\n        modal.classList.toggle('active')\r\n    }\r\n\r\n    return (\r\n        <div className=\"hero-slide\">\r\n            <div className=\"movie\" style={{backgroundImage: `url(${background})`}}>\r\n            <div className=\"movie-info\">\r\n                <div className=\"movie-desc\">\r\n                        <h1 className='movie-title'>{item.title}</h1>\r\n                        <p className='movie-overview'>{item.overview}</p>\r\n                        <div className=\"buttons\">\r\n                            <Button onClick={() => hisrory.push('/movie/' + item.id)}>Watch Now</Button>\r\n                            <Button btnstyle='btn--outlined' onClick={setModalActive}>Watch Trailer</Button>\r\n                        </div>\r\n                </div>\r\n                <div className=\"movie-poster\">\r\n                    <img src={poster} alt={item.title} />\r\n                </div>\r\n            </div>\r\n            </div>\r\n        </div>\r\n    )\r\n    \r\n}\r\n\r\n\r\n\r\nconst TrailerModal = props => {\r\n    const item = props.item;\r\n    const iframeRef = useRef(null);\r\n    const onClose = () => iframeRef.current.setAttribute('src', '');\r\n\r\n    return (\r\n        <Modal active={false} id={`modal_${item.id}`}>\r\n            <ModalContent onClose={onClose} >\r\n            <iframe ref={iframeRef} width=\"800px\" height=\"500px\" title=\"trailer\"></iframe>\r\n            </ModalContent>\r\n        </Modal>\r\n    )\r\n}\r\n\r\n\r\nexport default HeroSlide;\r\n","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport apiConfig from '../../api/APIConfig';\r\nimport { category } from '../../api/tmdbAPI'\r\nimport Button from '../Button/Button';\r\nimport './movie-card.scss'\r\nconst MovieCard = props => {\r\n    const item = props.item;\r\n    const link = '/' + category[props.category] + '/' + item.id;\r\n    const bg = apiConfig.w500Image(item.poster_path || item.backdrop_path)\r\n    const handleClick = () => {\r\n        window.scrollTo(0,0)\r\n    }\r\n    return (\r\n        <Link to={link} >\r\n            <div className=\"movie-card\" style={{backgroundImage: `url(${bg})`}} onClick={handleClick}>\r\n            <Button btnstyle='btn--primary'>\r\n            <i className=\"fas fa-play-circle\"></i>\r\n            </Button>\r\n            </div>\r\n            <h3>{item.title || item.name}</h3>\r\n        </Link>\r\n    )\r\n}\r\n\r\nexport default MovieCard\r\n","import React, { useState, useEffect} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport './movie-list.scss'\r\nimport tmdbApi, {category} from '../../api/tmdbAPI'\r\nimport {Swiper, SwiperSlide} from 'swiper/react'\r\nimport MovieCard from '../MovieCard/MovieCard'\r\nconst MovieList = props => {\r\n\r\n    const [items, setItems] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const getList = async () => {\r\n            let response = null;\r\n            const params = {};\r\n            if(props.type !== 'similar'){\r\n                switch(props.category){\r\n                    case category.movie:\r\n                        response = await tmdbApi.getMoviesList(props.type, {params});\r\n                        break;\r\n                        default:\r\n                            response = await tmdbApi.getTvList(props.type, {params});\r\n                }\r\n            } else {\r\n                response = await tmdbApi.similar(props.category, props.id)\r\n                \r\n            }\r\n            setItems(response.results)\r\n        }\r\n        getList();\r\n    } ,[])\r\n\r\n    return (\r\n        <div className=\"movie-list\">\r\n            <Swiper\r\n            grabCursor={true}\r\n            spaceBetween={10}\r\n            slidesPerView={'auto'}\r\n            >\r\n            {items.map((item, i) => (\r\n                <SwiperSlide key={i}>\r\n                    <MovieCard category={props.category} item={item} />\r\n                </SwiperSlide>\r\n            ))}\r\n            </Swiper>\r\n        </div>\r\n    )\r\n}\r\n\r\nMovieList.propTypes = {\r\n    category: PropTypes.string.isRequired,\r\n    type: PropTypes.string.isRequired\r\n}\r\n\r\nexport default MovieList;\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport Button from '../components/Button/Button'\r\nimport HeroSlide from '../components/HeroSlide/HeroSlide'\r\nimport MovieList from '../components/MovieList/MovieList'\r\nimport {category, movieType, tvType} from '../api/tmdbAPI'\r\nconst Home = () => {\r\n    const handleClick = () => {\r\n        window.scrollTo(0,0);\r\n    }\r\n    return (\r\n        <div>\r\n            <HeroSlide />\r\n            <div className=\"section container\">\r\n\r\n                <div className=\"trending-movies mb-3\">\r\n                    <div className=\"section__header mb-2\">\r\n                        <h2>Trending Movies</h2>\r\n                        <Link to='/movies'>\r\n                        <Button btnstyle='btn--outlined' onClick={handleClick}>View More</Button>\r\n                        </Link>\r\n                    </div>\r\n                    <div className=\"list\">\r\n                        <MovieList category={category.movie} type={movieType.popular} />\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                <div className=\"top-rated-movies mb-3\">\r\n                    <div className=\"section__header mb-2\">\r\n                        <h2>Top Rated Movies</h2>\r\n                        <Link to='/movies'>\r\n                        <Button btnstyle='btn--outlined' onClick={handleClick}>View More</Button>\r\n                        </Link>\r\n                    </div>\r\n                    <div className=\"list\">\r\n                    <MovieList category={category.movie} type={movieType.top_rated} />\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                <div className=\"trending-TV mb-3\">\r\n                    <div className=\"section__header mb-2\">\r\n                        <h2>Trending TV</h2>\r\n                        <Link to='/tvseries'>\r\n                        <Button btnstyle='btn--outlined' onClick={handleClick}>View More</Button>\r\n                        </Link>\r\n                    </div>\r\n                    <div className=\"list\">\r\n                    <MovieList category={category.tv} type={tvType.popular} />\r\n                    </div>\r\n                </div>\r\n                \r\n                <div className=\"top-rated-TV mb-3\">\r\n                    <div className=\"section__header mb-2\">\r\n                        <h2>Top Rated TV</h2>\r\n                        <Link to='/tvseries'>\r\n                        <Button btnstyle='btn--outlined' onClick={handleClick}>View More</Button>\r\n                        </Link>\r\n                    </div>\r\n                    <div className=\"list\">\r\n                    <MovieList category={category.tv} type={tvType.top_rated} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import React from 'react'\r\nimport footerbg from '../../assets/footer-bg.jpg'\r\nimport \"./PageHeader.scss\"\r\nconst PageHeader = props => {\r\n    return (\r\n        <div className='page-header' style={{backgroundImage: `url(${footerbg})`, height: \"200px\", margin: \"0 0 100px 0\"}}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PageHeader\r\n","import React,{ useState, useEffect} from 'react'\r\nimport MovieCard from '../MovieCard/MovieCard';\r\nimport tmdbApi, {movieType, tvType} from '../../api/tmdbAPI';\r\nimport \"./Movies-Grid.scss\"\r\nimport Button from '../Button/Button';\r\nconst MoviesGrid = props => {\r\n    const [items, setItems] = useState([]);\r\n    const [page, setPage] = useState(1);\r\n    const [inputValue, setInputValue] = useState(\"\");\r\n    const [searchCatg, setSearchCatg] = useState('')\r\n    useEffect(() => {\r\n        const getList = async () => {\r\n            let response = null;\r\n            const params = {};\r\n            if(props.category === 'movies') {\r\n                response = await tmdbApi.getMoviesList(movieType.upcoming, {params})\r\n            } else if (props.category === 'tvseries') {\r\n                response = await tmdbApi.getTvList(tvType.popular, {params})\r\n            } else {\r\n                return alert('hi')\r\n            }\r\n            setItems(response.results)\r\n            if(props.category === 'movies') {\r\n                setSearchCatg('movies')\r\n            } else {\r\n                setSearchCatg('tv');\r\n            }\r\n        }\r\n        getList();\r\n    },[props.category])\r\n    const loadMore = async () => {\r\n            let response = null;\r\n            const params = {\r\n                page: page + 1\r\n            };\r\n            if(props.category === 'movies') {\r\n                response = await tmdbApi.getMoviesList(movieType.upcoming, {params})\r\n            } else {\r\n                response = await tmdbApi.getTvList(tvType.popular, {params})\r\n            }\r\n            setItems([...items, ...response.results])\r\n            setPage(page + 1)\r\n    }\r\n    return (\r\n        <div className='section'>\r\n        <div className=\"movie-search\">\r\n            <input type=\"text\" placeholder='Search for a movie' onChange={(e) => setInputValue(e.target.value)} />\r\n        </div>\r\n        <div className='movies-grid mb-3'>\r\n            {items &&\r\n                items.filter(itemName => {\r\n                    if (searchCatg === 'movies') {\r\n                        if(inputValue === '') {\r\n                            return itemName;\r\n                        } else if (itemName.title.toLowerCase().includes(inputValue.toLowerCase())){\r\n                            return itemName\r\n                        }\r\n                    } else {\r\n                        if(inputValue === '') {\r\n                            return itemName;\r\n                        } else if (itemName.name.toLowerCase().includes(inputValue.toLowerCase())){\r\n                            return itemName\r\n                        }\r\n                    }\r\n\r\n                }).map((item, i) => (\r\n                    <MovieCard  key={i} item={item} category={props.category === 'movies' ? 'movie' : 'tv'} />\r\n                ))\r\n            }\r\n        </div>\r\n        { page < 500 ? \r\n            <Button btnstyle='btn--outlined' onClick={loadMore}>View More</Button> : \"\"\r\n        }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MoviesGrid\r\n\r\n\r\n\r\n/* \r\n{items.map((item, i) => (\r\n                <MovieCard  key={i} item={item} category={props.category === 'movies' ? 'movie' : 'tv'} />\r\n            ))}\r\n\r\n*/ ","import React from 'react'\r\nimport { useParams } from 'react-router'\r\nimport PageHeader from '../components/page-header/PageHeader';\r\nimport MoviesGrid from '../components/MoviesGrid/MoviesGrid'\r\n\r\nconst Catalog = () => {\r\n    const {category} = useParams();\r\n    \r\n    return (\r\n        <div>\r\n            <PageHeader>\r\n                <h2>{category === 'movies' ? \"Movies\" : \"TV Series\"}</h2>\r\n            </PageHeader>\r\n            <div className=\"container mb-3\">\r\n                <MoviesGrid category={category}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Catalog\r\n","import React, {useState, useEffect, useRef} from 'react'\r\nimport tmdbApi from '../api/tmdbAPI';\r\n\r\nconst VideoList = props => {\r\n    const [videos, setVideos] = useState([]);\r\n    useEffect(() => {\r\n        const getVideos = async () => {\r\n            const response = await tmdbApi.getVideos(props.category, props.id)\r\n            setVideos(response.results.slice(0,5))\r\n            console.log(response.results.slice(0,5))\r\n        }\r\n        getVideos();\r\n    },[props.id])\r\n    return (\r\n        <>\r\n        {\r\n            videos.map((video, i) => (\r\n                <Video key={i} video={video} />\r\n            ))\r\n        }\r\n        </>\r\n    )\r\n}\r\n\r\nconst Video = props => {\r\n    const video = props.video;\r\n    const iframeRef = useRef(null);\r\n    useEffect(() => {\r\n        const height = iframeRef.current.offsetWidth * 9 / 16 + 'px';\r\n        iframeRef.current.setAttribute('height', height);\r\n    },[])\r\n\r\n    return (\r\n        <div className=\"video\">\r\n            <div className=\"video__title\">\r\n                <h2>{video.name}</h2>\r\n            </div>\r\n            <iframe\r\n            src={`https://www.youtube.com/embed/${video.key}`} \r\n            title='video'\r\n            width='100%'\r\n            ref={iframeRef}\r\n            ></iframe>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\nexport default VideoList\r\n","import React,{useState, useEffect} from 'react'\r\nimport tmdbApi from '../../api/tmdbAPI'\r\nimport apiConfig from '../../api/APIConfig';\r\n\r\nconst Cast = props => {\r\n    const [casts, setCasts] = useState(null);\r\n    useEffect(() => {\r\n        const getCasts = async () => {\r\n            const response = await tmdbApi.credits(props.category, props.id)\r\n            setCasts(response.cast.slice(0,5))\r\n            console.log(response.cast)\r\n        }\r\n        getCasts();\r\n\r\n    }, [props.id])\r\n\r\n\r\n    return (\r\n        <>\r\n            {casts && (\r\n                <>\r\n                {casts.map((cast, i) => (\r\n                    <div className='cast' key={i}>\r\n                        <img src={cast.profile_path ? apiConfig.w500Image(cast.profile_path): \"https://st3.depositphotos.com/4111759/13425/v/600/depositphotos_134255532-stock-illustration-profile-placeholder-male-default-profile.jpg\"} alt=\"\" />\r\n                        <h3>{cast.name}</h3>\r\n                    </div>\r\n                ))}\r\n                </>\r\n            )\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Cast\r\n","import React, {useState, useEffect} from 'react';\r\nimport { useParams } from 'react-router';\r\nimport tmdbApi from '../api/tmdbAPI';\r\nimport apiConfig from '../api/APIConfig';\r\nimport Button from '../components/Button/Button';\r\nimport VideoList from './VideoList';\r\nimport MovieList from '../components/MovieList/MovieList';\r\nimport Cast from '../components/MoviesCast/Cast';\r\nimport './Detail.scss';\r\n\r\n\r\nconst Detail = () => {\r\n\r\n    const { category, id } = useParams();\r\n    const [item, setItem] = useState(null);\r\n    useEffect(() => {\r\n        const getDetails = async () => {\r\n            const response = await tmdbApi.detail(category, id, {params:{}})\r\n            setItem(response)\r\n        }\r\n        getDetails();\r\n    },[id])\r\n\r\n\r\n    return (\r\n        <>\r\n        {item &&\r\n        <>\r\n        <div className='banner'style={{backgroundImage: `url(${apiConfig.originalImage(item.backdrop_path || item.poster_path)})`}}>\r\n        </div>\r\n        <div className=\"mb-3 movie-content container\">\r\n                <div className=\"movie-content__poster\">\r\n                    <div className='movie-content__poster__img' style={{backgroundImage: `url(${apiConfig.w500Image(item.poster_path)})`}}></div>\r\n                </div>\r\n                <div className=\"movie-content__info\">\r\n                    <h2 className='movie-title'>{item.title || item.name}</h2>\r\n                    <div className=\"genres\">\r\n                    { item.genres && item.genres.map((genre, i) => (\r\n                        <Button key={i} btnstyle='btn--outlined'>{genre.name}</Button>\r\n                    ))}\r\n                    </div>\r\n                    <p className=\"overview\">{item.overview}</p>\r\n                    <div className=\"casts-section\">\r\n                        <h2 className='casts-title'>Casts</h2>\r\n                        <div className=\"our-casts\">\r\n                            <Cast category={category} id={id} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                \r\n        </div>\r\n        <div className=\"container \">\r\n            <div className=\"videos\">\r\n            <VideoList category={category} id={id} />\r\n            </div>\r\n            <div className=\"similar-movies\" style={{margin: '50px 0'}}>\r\n            <h2>Similar</h2>\r\n            <MovieList type='similar' category={category} id={id} />\r\n        </div>\r\n        </div>\r\n        \r\n        </>\r\n        }\r\n        \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Detail\r\n","import React from 'react'\r\nimport {Route, Switch} from 'react-router-dom'\r\nimport Home from '../pages/Home'\r\nimport Catalog from '../pages/Catalog'\r\nimport Detail from '../pages/Detail'\r\n\r\nconst Routes = () => {\r\n    return (\r\n        <Switch>\r\n               <Route exact path='/'>\r\n                   <Home />\r\n               </Route>\r\n               <Route path='/:category/:id'>\r\n               <Detail />\r\n               </Route>\r\n               <Route path='/:category'>\r\n                    <Catalog />\r\n               </Route>\r\n               <Route path='*'>\r\n               <h1>hi</h1>\r\n               </Route>\r\n           </Switch>\r\n    )\r\n}\r\n\r\nexport default Routes\r\n\r\n","import \"./App.scss\"\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport Header from './components/Header/Header'\nimport Footer from './components/Footer/Footer'\nimport Routes from './config/Routes'\n\nfunction App() {\n  return (\n    <Router>\n      <Header />\n      <Routes />\n      <Footer/>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}