[{"C:\\Users\\i5-10400f\\Desktop\\movies-react\\src\\index.js":"1","C:\\Users\\i5-10400f\\Desktop\\movies-react\\src\\App.js":"2","C:\\Users\\i5-10400f\\Desktop\\movies-react\\src\\config\\Routes.jsx":"3","C:\\Users\\i5-10400f\\Desktop\\movies-react\\src\\components\\Footer\\Footer.jsx":"4","C:\\Users\\i5-10400f\\Desktop\\movies-react\\src\\components\\Header\\Header.jsx":"5","C:\\Users\\i5-10400f\\Desktop\\movies-react\\src\\pages\\Catalog.jsx":"6","C:\\Users\\i5-10400f\\Desktop\\movies-react\\src\\pages\\Detail.jsx":"7","C:\\Users\\i5-10400f\\Desktop\\movies-react\\src\\pages\\Home.jsx":"8","C:\\Users\\i5-10400f\\Desktop\\movies-react\\src\\api\\tmdbAPI.js":"9","C:\\Users\\i5-10400f\\Desktop\\movies-react\\src\\api\\axiosClient.js":"10","C:\\Users\\i5-10400f\\Desktop\\movies-react\\src\\api\\APIConfig.js":"11","C:\\Users\\i5-10400f\\Desktop\\movies-react\\src\\components\\HeroSlide\\HeroSlide.jsx":"12","C:\\Users\\i5-10400f\\Desktop\\movies-react\\src\\components\\Button\\Button.jsx":"13","C:\\Users\\i5-10400f\\Desktop\\movies-react\\src\\components\\Modal\\Modal.jsx":"14","C:\\Users\\i5-10400f\\Desktop\\movies-react\\src\\components\\MovieList\\MovieList.jsx":"15","C:\\Users\\i5-10400f\\Desktop\\movies-react\\src\\components\\MovieCard\\MovieCard.jsx":"16","C:\\Users\\i5-10400f\\Desktop\\movies-react\\src\\components\\page-header\\PageHeader.jsx":"17","C:\\Users\\i5-10400f\\Desktop\\movies-react\\src\\components\\MoviesGrid\\MoviesGrid.jsx":"18","C:\\Users\\i5-10400f\\Desktop\\movies-react\\src\\components\\MoviesCast\\Cast.jsx":"19","C:\\Users\\i5-10400f\\Desktop\\movies-react\\src\\pages\\VideoList.jsx":"20","C:\\Users\\i5-10400f\\Desktop\\movies-react\\src\\pages\\NotFound.jsx":"21"},{"size":156,"mtime":1634035794531,"results":"22","hashOfConfig":"23"},{"size":348,"mtime":1634904806245,"results":"24","hashOfConfig":"23"},{"size":635,"mtime":1634927280305,"results":"25","hashOfConfig":"23"},{"size":1457,"mtime":1634576058702,"results":"26","hashOfConfig":"23"},{"size":2033,"mtime":1634922439906,"results":"27","hashOfConfig":"23"},{"size":643,"mtime":1634927912224,"results":"28","hashOfConfig":"23"},{"size":2493,"mtime":1634907137608,"results":"29","hashOfConfig":"23"},{"size":2791,"mtime":1634918487709,"results":"30","hashOfConfig":"23"},{"size":1389,"mtime":1634918165982,"results":"31","hashOfConfig":"23"},{"size":630,"mtime":1634128532135,"results":"32","hashOfConfig":"23"},{"size":311,"mtime":1634215642754,"results":"33","hashOfConfig":"23"},{"size":4039,"mtime":1634983863104,"results":"34","hashOfConfig":"23"},{"size":426,"mtime":1634487253142,"results":"35","hashOfConfig":"23"},{"size":1108,"mtime":1634922813895,"results":"36","hashOfConfig":"23"},{"size":1651,"mtime":1634905269085,"results":"37","hashOfConfig":"23"},{"size":887,"mtime":1634922877387,"results":"38","hashOfConfig":"23"},{"size":361,"mtime":1634583818200,"results":"39","hashOfConfig":"23"},{"size":3427,"mtime":1634927791240,"results":"40","hashOfConfig":"23"},{"size":1061,"mtime":1634928168980,"results":"41","hashOfConfig":"23"},{"size":1265,"mtime":1634928160723,"results":"42","hashOfConfig":"23"},{"size":154,"mtime":1634927170368,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"1yq7ty3",{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"46"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"46"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"46"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"46"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"C:\\Users\\i5-10400f\\Desktop\\movies-react\\src\\index.js",[],["91","92"],"C:\\Users\\i5-10400f\\Desktop\\movies-react\\src\\App.js",[],"C:\\Users\\i5-10400f\\Desktop\\movies-react\\src\\config\\Routes.jsx",["93"],"import React from 'react'\r\nimport {Route, Switch} from 'react-router-dom'\r\nimport Home from '../pages/Home'\r\nimport Catalog from '../pages/Catalog'\r\nimport Detail from '../pages/Detail'\r\nimport NotFound from '../pages/NotFound'\r\nconst Routes = () => {\r\n    return (\r\n        <Switch>\r\n               <Route exact path='/'>\r\n                   <Home />\r\n               </Route>\r\n               <Route path='/:category/:id'>\r\n               <Detail />\r\n               </Route>\r\n               <Route path='/:category'>\r\n                    <Catalog />\r\n               </Route>\r\n           </Switch>\r\n    )\r\n}\r\n\r\nexport default Routes\r\n\r\n","C:\\Users\\i5-10400f\\Desktop\\movies-react\\src\\components\\Footer\\Footer.jsx",[],"C:\\Users\\i5-10400f\\Desktop\\movies-react\\src\\components\\Header\\Header.jsx",[],"C:\\Users\\i5-10400f\\Desktop\\movies-react\\src\\pages\\Catalog.jsx",[],"C:\\Users\\i5-10400f\\Desktop\\movies-react\\src\\pages\\Detail.jsx",["94"],"import React, {useState, useEffect} from 'react';\r\nimport { useParams } from 'react-router';\r\nimport tmdbApi from '../api/tmdbAPI';\r\nimport apiConfig from '../api/APIConfig';\r\nimport Button from '../components/Button/Button';\r\nimport VideoList from './VideoList';\r\nimport MovieList from '../components/MovieList/MovieList';\r\nimport Cast from '../components/MoviesCast/Cast';\r\nimport './Detail.scss';\r\n\r\n\r\nconst Detail = () => {\r\n\r\n    const { category, id } = useParams();\r\n    const [item, setItem] = useState(null);\r\n    useEffect(() => {\r\n        const getDetails = async () => {\r\n            const response = await tmdbApi.detail(category, id, {params:{}})\r\n            setItem(response)\r\n        }\r\n        getDetails();\r\n    },[id])\r\n\r\n\r\n    return (\r\n        <>\r\n        {item &&\r\n        <>\r\n        <div className='banner'style={{backgroundImage: `url(${apiConfig.originalImage(item.backdrop_path || item.poster_path)})`}}>\r\n        </div>\r\n        <div className=\"mb-3 movie-content container\">\r\n                <div className=\"movie-content__poster\">\r\n                    <div className='movie-content__poster__img' style={{backgroundImage: `url(${apiConfig.w500Image(item.poster_path)})`}}></div>\r\n                </div>\r\n                <div className=\"movie-content__info\">\r\n                    <h2 className='movie-title'>{item.title || item.name}</h2>\r\n                    <div className=\"genres\">\r\n                    { item.genres && item.genres.map((genre, i) => (\r\n                        <Button key={i} btnstyle='btn--outlined'>{genre.name}</Button>\r\n                    ))}\r\n                    </div>\r\n                    <p className=\"overview\">{item.overview}</p>\r\n                    <div className=\"casts-section\">\r\n                        <h2 className='casts-title'>Casts</h2>\r\n                        <div className=\"our-casts\">\r\n                            <Cast category={category} id={id} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                \r\n        </div>\r\n        <div className=\"container \">\r\n            <div className=\"videos\">\r\n            <VideoList category={category} id={id} />\r\n            </div>\r\n            <div className=\"similar-movies\" style={{margin: '50px 0'}}>\r\n            <h2>Similar</h2>\r\n            <MovieList type='similar' category={category} id={id} />\r\n        </div>\r\n        </div>\r\n        \r\n        </>\r\n        }\r\n        \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Detail\r\n","C:\\Users\\i5-10400f\\Desktop\\movies-react\\src\\pages\\Home.jsx",[],"C:\\Users\\i5-10400f\\Desktop\\movies-react\\src\\api\\tmdbAPI.js",[],"C:\\Users\\i5-10400f\\Desktop\\movies-react\\src\\api\\axiosClient.js",[],"C:\\Users\\i5-10400f\\Desktop\\movies-react\\src\\api\\APIConfig.js",[],"C:\\Users\\i5-10400f\\Desktop\\movies-react\\src\\components\\HeroSlide\\HeroSlide.jsx",[],"C:\\Users\\i5-10400f\\Desktop\\movies-react\\src\\components\\Button\\Button.jsx",[],"C:\\Users\\i5-10400f\\Desktop\\movies-react\\src\\components\\Modal\\Modal.jsx",[],"C:\\Users\\i5-10400f\\Desktop\\movies-react\\src\\components\\MovieList\\MovieList.jsx",["95"],"import React, { useState, useEffect} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport './movie-list.scss'\r\nimport tmdbApi, {category} from '../../api/tmdbAPI'\r\nimport {Swiper, SwiperSlide} from 'swiper/react'\r\nimport MovieCard from '../MovieCard/MovieCard'\r\nconst MovieList = props => {\r\n\r\n    const [items, setItems] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const getList = async () => {\r\n            let response = null;\r\n            const params = {};\r\n            if(props.type !== 'similar'){\r\n                switch(props.category){\r\n                    case category.movie:\r\n                        response = await tmdbApi.getMoviesList(props.type, {params});\r\n                        break;\r\n                        default:\r\n                            response = await tmdbApi.getTvList(props.type, {params});\r\n                }\r\n            } else {\r\n                response = await tmdbApi.similar(props.category, props.id)\r\n                \r\n            }\r\n            setItems(response.results)\r\n        }\r\n        getList();\r\n    } ,[])\r\n\r\n    return (\r\n        <div className=\"movie-list\">\r\n            <Swiper\r\n            grabCursor={true}\r\n            spaceBetween={10}\r\n            slidesPerView={'auto'}\r\n            >\r\n            {items.map((item, i) => (\r\n                <SwiperSlide key={i}>\r\n                    <MovieCard category={props.category} item={item} />\r\n                </SwiperSlide>\r\n            ))}\r\n            </Swiper>\r\n        </div>\r\n    )\r\n}\r\n\r\nMovieList.propTypes = {\r\n    category: PropTypes.string.isRequired,\r\n    type: PropTypes.string.isRequired\r\n}\r\n\r\nexport default MovieList;\r\n","C:\\Users\\i5-10400f\\Desktop\\movies-react\\src\\components\\MovieCard\\MovieCard.jsx",[],"C:\\Users\\i5-10400f\\Desktop\\movies-react\\src\\components\\page-header\\PageHeader.jsx",[],"C:\\Users\\i5-10400f\\Desktop\\movies-react\\src\\components\\MoviesGrid\\MoviesGrid.jsx",["96","97"],"import React,{ useState, useEffect} from 'react'\r\nimport MovieCard from '../MovieCard/MovieCard';\r\nimport tmdbApi, {movieType, tvType} from '../../api/tmdbAPI';\r\nimport { useHistory } from 'react-router';\r\nimport \"./Movies-Grid.scss\"\r\nimport Button from '../Button/Button';\r\nconst MoviesGrid = props => {\r\n    const [items, setItems] = useState([]);\r\n    const [page, setPage] = useState(1);\r\n    const [inputValue, setInputValue] = useState(\"\");\r\n    const [searchCatg, setSearchCatg] = useState('')\r\n    const history = useHistory();\r\n    useEffect(() => {\r\n        if(props.category === 'movies' || props.category === 'tvseries') {\r\n            \r\n            const getList = async () => {\r\n                let response = null;\r\n                const params = {};\r\n                if(props.category === 'movies') {\r\n                    response = await tmdbApi.getMoviesList(movieType.upcoming, {params})\r\n                } else if (props.category === 'tvseries') {\r\n                    response = await tmdbApi.getTvList(tvType.popular, {params})\r\n                } else {\r\n                    alert('Page Not Found ...')\r\n                    history.push('/')\r\n                }\r\n                setItems(response.results)\r\n                if(props.category === 'movies') {\r\n                    setSearchCatg('movies')\r\n                } else {\r\n                    setSearchCatg('tv');\r\n                }\r\n            }\r\n            getList();\r\n        } else {\r\n            alert('Page Not Found')\r\n            history.push('/')\r\n        }\r\n        \r\n    },[props.category])\r\n    const loadMore = async () => {\r\n            let response = null;\r\n            const params = {\r\n                page: page + 1\r\n            };\r\n            if(props.category === 'movies') {\r\n                response = await tmdbApi.getMoviesList(movieType.upcoming, {params})\r\n            } else {\r\n                response = await tmdbApi.getTvList(tvType.popular, {params})\r\n            }\r\n            setItems([...items, ...response.results])\r\n            setPage(page + 1)\r\n    }\r\n    return (\r\n        <div className='section'>\r\n        <div className=\"movie-search\">\r\n            <input type=\"text\" placeholder='Search for a movie' onChange={(e) => setInputValue(e.target.value)} />\r\n        </div>\r\n        <div className='movies-grid mb-3'>\r\n            {items &&\r\n                items.filter(itemName => {\r\n                    if (searchCatg === 'movies') {\r\n                        if(inputValue === '') {\r\n                            return itemName;\r\n                        } else if (itemName.title.toLowerCase().includes(inputValue.toLowerCase())){\r\n                            return itemName\r\n                        }\r\n                    } else {\r\n                        if(inputValue === '') {\r\n                            return itemName;\r\n                        } else if (itemName.name.toLowerCase().includes(inputValue.toLowerCase())){\r\n                            return itemName\r\n                        }\r\n                    }\r\n\r\n                }).map((item, i) => (\r\n                    <MovieCard  key={i} item={item} category={props.category === 'movies' ? 'movie' : 'tv'} />\r\n                ))\r\n            }\r\n        </div>\r\n        { page < 500 ? \r\n            <Button btnstyle='btn--outlined' onClick={loadMore}>View More</Button> : \"\"\r\n        }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MoviesGrid","C:\\Users\\i5-10400f\\Desktop\\movies-react\\src\\components\\MoviesCast\\Cast.jsx",["98"],"C:\\Users\\i5-10400f\\Desktop\\movies-react\\src\\pages\\VideoList.jsx",["99"],"C:\\Users\\i5-10400f\\Desktop\\movies-react\\src\\pages\\NotFound.jsx",[],{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","severity":1,"message":"105","line":6,"column":8,"nodeType":"106","messageId":"107","endLine":6,"endColumn":16},{"ruleId":"108","severity":1,"message":"109","line":22,"column":7,"nodeType":"110","endLine":22,"endColumn":11,"suggestions":"111"},{"ruleId":"108","severity":1,"message":"112","line":30,"column":8,"nodeType":"110","endLine":30,"endColumn":10,"suggestions":"113"},{"ruleId":"108","severity":1,"message":"114","line":40,"column":7,"nodeType":"110","endLine":40,"endColumn":23,"suggestions":"115"},{"ruleId":"116","severity":1,"message":"117","line":61,"column":39,"nodeType":"118","messageId":"119","endLine":61,"endColumn":41},{"ruleId":"108","severity":1,"message":"120","line":14,"column":8,"nodeType":"110","endLine":14,"endColumn":18,"suggestions":"121"},{"ruleId":"108","severity":1,"message":"120","line":12,"column":7,"nodeType":"110","endLine":12,"endColumn":17,"suggestions":"122"},"no-native-reassign",["123"],"no-negated-in-lhs",["124"],"no-unused-vars","'NotFound' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'category'. Either include it or remove the dependency array.","ArrayExpression",["125"],"React Hook useEffect has missing dependencies: 'props.category', 'props.id', and 'props.type'. Either include them or remove the dependency array.",["126"],"React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["127"],"array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","React Hook useEffect has a missing dependency: 'props.category'. Either include it or remove the dependency array.",["128"],["129"],"no-global-assign","no-unsafe-negation",{"desc":"130","fix":"131"},{"desc":"132","fix":"133"},{"desc":"134","fix":"135"},{"desc":"136","fix":"137"},{"desc":"136","fix":"138"},"Update the dependencies array to be: [category, id]",{"range":"139","text":"140"},"Update the dependencies array to be: [props.category, props.id, props.type]",{"range":"141","text":"142"},"Update the dependencies array to be: [history, props.category]",{"range":"143","text":"144"},"Update the dependencies array to be: [props.category, props.id]",{"range":"145","text":"146"},{"range":"147","text":"146"},[733,737],"[category, id]",[1067,1069],"[props.category, props.id, props.type]",[1563,1579],"[history, props.category]",[440,450],"[props.category, props.id]",[411,421]]