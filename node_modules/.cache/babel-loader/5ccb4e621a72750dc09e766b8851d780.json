{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/i5-10400f/Desktop/movies-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Users/i5-10400f/Desktop/movies-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"C:/Users/i5-10400f/Desktop/movies-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect,useRef}from'react';import tmdbApi from'../api/tmdbAPI';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var VideoList=function VideoList(props){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),videos=_useState2[0],setVideos=_useState2[1];useEffect(function(){var getVideos=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return tmdbApi.getVideos(props.category,props.id);case 2:response=_context.sent;setVideos(response.results.slice(0,5));console.log(response.results.slice(0,5));case 5:case\"end\":return _context.stop();}}},_callee);}));return function getVideos(){return _ref.apply(this,arguments);};}();getVideos();},[props.id]);return/*#__PURE__*/_jsx(_Fragment,{children:videos.map(function(video,i){return/*#__PURE__*/_jsx(Video,{video:video},i);})});};var Video=function Video(props){var video=props.video;var iframeRef=useRef(null);useEffect(function(){var height=iframeRef.current.offsetWidth*9/16+'px';iframeRef.current.setAttribute('height',height);},[]);return/*#__PURE__*/_jsxs(\"div\",{className:\"video\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"video__title\",children:/*#__PURE__*/_jsx(\"h2\",{children:video.name})}),/*#__PURE__*/_jsx(\"iframe\",{src:\"https://www.youtube.com/embed/\".concat(video.key),title:\"video\",width:\"100%\",ref:iframeRef})]});};export default VideoList;","map":{"version":3,"sources":["C:/Users/i5-10400f/Desktop/movies-react/src/pages/VideoList.jsx"],"names":["React","useState","useEffect","useRef","tmdbApi","VideoList","props","videos","setVideos","getVideos","category","id","response","results","slice","console","log","map","video","i","Video","iframeRef","height","current","offsetWidth","setAttribute","name","key"],"mappings":"udAAA,MAAOA,CAAAA,KAAP,EAAeC,QAAf,CAAyBC,SAAzB,CAAoCC,MAApC,KAAiD,OAAjD,CACA,MAAOC,CAAAA,OAAP,KAAoB,gBAApB,C,6IAEA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAAAC,KAAK,CAAI,CACvB,cAA4BL,QAAQ,CAAC,EAAD,CAApC,wCAAOM,MAAP,eAAeC,SAAf,eACAN,SAAS,CAAC,UAAM,CACZ,GAAMO,CAAAA,SAAS,0FAAG,sKACSL,CAAAA,OAAO,CAACK,SAAR,CAAkBH,KAAK,CAACI,QAAxB,CAAkCJ,KAAK,CAACK,EAAxC,CADT,QACRC,QADQ,eAEdJ,SAAS,CAACI,QAAQ,CAACC,OAAT,CAAiBC,KAAjB,CAAuB,CAAvB,CAAyB,CAAzB,CAAD,CAAT,CACAC,OAAO,CAACC,GAAR,CAAYJ,QAAQ,CAACC,OAAT,CAAiBC,KAAjB,CAAuB,CAAvB,CAAyB,CAAzB,CAAZ,EAHc,sDAAH,kBAATL,CAAAA,SAAS,0CAAf,CAKAA,SAAS,GACZ,CAPQ,CAOP,CAACH,KAAK,CAACK,EAAP,CAPO,CAAT,CAQA,mBACI,yBAEIJ,MAAM,CAACU,GAAP,CAAW,SAACC,KAAD,CAAQC,CAAR,qBACP,KAAC,KAAD,EAAe,KAAK,CAAED,KAAtB,EAAYC,CAAZ,CADO,EAAX,CAFJ,EADJ,CASH,CAnBD,CAqBA,GAAMC,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,CAAAd,KAAK,CAAI,CACnB,GAAMY,CAAAA,KAAK,CAAGZ,KAAK,CAACY,KAApB,CACA,GAAMG,CAAAA,SAAS,CAAGlB,MAAM,CAAC,IAAD,CAAxB,CACAD,SAAS,CAAC,UAAM,CACZ,GAAMoB,CAAAA,MAAM,CAAGD,SAAS,CAACE,OAAV,CAAkBC,WAAlB,CAAgC,CAAhC,CAAoC,EAApC,CAAyC,IAAxD,CACAH,SAAS,CAACE,OAAV,CAAkBE,YAAlB,CAA+B,QAA/B,CAAyCH,MAAzC,EACH,CAHQ,CAGP,EAHO,CAAT,CAKA,mBACI,aAAK,SAAS,CAAC,OAAf,wBACI,YAAK,SAAS,CAAC,cAAf,uBACI,oBAAKJ,KAAK,CAACQ,IAAX,EADJ,EADJ,cAII,eACA,GAAG,yCAAmCR,KAAK,CAACS,GAAzC,CADH,CAEA,KAAK,CAAC,OAFN,CAGA,KAAK,CAAC,MAHN,CAIA,GAAG,CAAEN,SAJL,EAJJ,GADJ,CAaH,CArBD,CA0BA,cAAehB,CAAAA,SAAf","sourcesContent":["import React, {useState, useEffect, useRef} from 'react'\r\nimport tmdbApi from '../api/tmdbAPI';\r\n\r\nconst VideoList = props => {\r\n    const [videos, setVideos] = useState([]);\r\n    useEffect(() => {\r\n        const getVideos = async () => {\r\n            const response = await tmdbApi.getVideos(props.category, props.id)\r\n            setVideos(response.results.slice(0,5))\r\n            console.log(response.results.slice(0,5))\r\n        }\r\n        getVideos();\r\n    },[props.id])\r\n    return (\r\n        <>\r\n        {\r\n            videos.map((video, i) => (\r\n                <Video key={i} video={video} />\r\n            ))\r\n        }\r\n        </>\r\n    )\r\n}\r\n\r\nconst Video = props => {\r\n    const video = props.video;\r\n    const iframeRef = useRef(null);\r\n    useEffect(() => {\r\n        const height = iframeRef.current.offsetWidth * 9 / 16 + 'px';\r\n        iframeRef.current.setAttribute('height', height);\r\n    },[])\r\n\r\n    return (\r\n        <div className=\"video\">\r\n            <div className=\"video__title\">\r\n                <h2>{video.name}</h2>\r\n            </div>\r\n            <iframe\r\n            src={`https://www.youtube.com/embed/${video.key}`} \r\n            title='video'\r\n            width='100%'\r\n            ref={iframeRef}\r\n            ></iframe>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\nexport default VideoList\r\n"]},"metadata":{},"sourceType":"module"}