{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\i5-10400f\\\\Desktop\\\\movies-react\\\\src\\\\components\\\\HeroSlide\\\\HeroSlide.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport tmdbApi, { category, movieType } from '../../api/tmdbAPI';\nimport apiConfig from '../../api/APIConfig';\nimport SwiperCore, { Autoplay } from 'swiper';\nimport { Swiper, SwiperSlide } from 'swiper/react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst HeroSlide = () => {\n  _s();\n\n  const [movies, setMovies] = useState([]);\n  useEffect(() => {\n    const getMovies = async () => {\n      const params = {\n        page: 1\n      };\n\n      try {\n        const response = await tmdbApi.getMoviesList(movieType.popular, {\n          params\n        });\n        setMovies(response.results);\n        console.log(response);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    getMovies();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Swiper, {\n    className: \"mySwiper\",\n    modules: [Autoplay],\n    grabCursor: true,\n    spaceBetween: 0,\n    slidesPerView: 1,\n    children: movies.map((movie, idx) => /*#__PURE__*/_jsxDEV(SwiperSlide, {\n      children: ({\n        isActive\n      }) => /*#__PURE__*/_jsxDEV(\"img\", {\n        src: apiConfig.originalImage(item.backdrop_path),\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }, this)\n    }, idx, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n\n_s(HeroSlide, \"MO6b3PSP3RIUqZ8gtSrBZBVtBbs=\");\n\n_c = HeroSlide;\nexport default HeroSlide;\n\nvar _c;\n\n$RefreshReg$(_c, \"HeroSlide\");","map":{"version":3,"sources":["C:/Users/i5-10400f/Desktop/movies-react/src/components/HeroSlide/HeroSlide.jsx"],"names":["React","useState","useEffect","tmdbApi","category","movieType","apiConfig","SwiperCore","Autoplay","Swiper","SwiperSlide","HeroSlide","movies","setMovies","getMovies","params","page","response","getMoviesList","popular","results","console","log","error","map","movie","idx","isActive","originalImage","item","backdrop_path"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AAEA,OAAOC,OAAP,IAAiBC,QAAjB,EAA2BC,SAA3B,QAA2C,mBAA3C;AACA,OAAOC,SAAP,MAAsB,qBAAtB;AACA,OAAOC,UAAP,IAAqBC,QAArB,QAAqC,QAArC;AACA,SAAQC,MAAR,EAAgBC,WAAhB,QAAkC,cAAlC;;;AAGA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACpB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBZ,QAAQ,CAAC,EAAD,CAApC;AACAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMY,SAAS,GAAG,YAAY;AAC1B,YAAMC,MAAM,GAAG;AAACC,QAAAA,IAAI,EAAE;AAAP,OAAf;;AACA,UAAI;AACA,cAAMC,QAAQ,GAAG,MAAMd,OAAO,CAACe,aAAR,CAAsBb,SAAS,CAACc,OAAhC,EAAyC;AAACJ,UAAAA;AAAD,SAAzC,CAAvB;AACAF,QAAAA,SAAS,CAACI,QAAQ,CAACG,OAAV,CAAT;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ;AACH,OAJD,CAIE,OAAOM,KAAP,EAAc;AACZF,QAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;AACH;AAEJ,KAVD;;AAWAT,IAAAA,SAAS;AACZ,GAbQ,EAaP,EAbO,CAAT;AAcA,sBACI,QAAC,MAAD;AAAQ,IAAA,SAAS,EAAC,UAAlB;AACA,IAAA,OAAO,EAAE,CAACN,QAAD,CADT;AAEA,IAAA,UAAU,EAAE,IAFZ;AAGA,IAAA,YAAY,EAAE,CAHd;AAIA,IAAA,aAAa,EAAE,CAJf;AAAA,cAMKI,MAAM,CAACY,GAAP,CAAW,CAACC,KAAD,EAAQC,GAAR,kBACR,QAAC,WAAD;AAAA,gBACK,CAAC;AAAEC,QAAAA;AAAF,OAAD,kBACD;AAAK,QAAA,GAAG,EAAErB,SAAS,CAACsB,aAAV,CAAwBC,IAAI,CAACC,aAA7B,CAAV;AAAuD,QAAA,GAAG,EAAC;AAA3D;AAAA;AAAA;AAAA;AAAA;AAFJ,OAAkBJ,GAAlB;AAAA;AAAA;AAAA;AAAA,YADH;AANL;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH,CAhCD;;GAAMf,S;;KAAAA,S;AAkCN,eAAeA,SAAf","sourcesContent":["import React, {useState, useEffect} from 'react'\r\n\r\nimport tmdbApi, {category, movieType} from '../../api/tmdbAPI'\r\nimport apiConfig from '../../api/APIConfig'\r\nimport SwiperCore ,{ Autoplay } from 'swiper'\r\nimport {Swiper, SwiperSlide} from 'swiper/react'\r\n\r\n\r\nconst HeroSlide = () => {\r\n    const [movies, setMovies] = useState([])\r\n    useEffect(() => {\r\n        const getMovies = async () => {\r\n            const params = {page: 1}\r\n            try {\r\n                const response = await tmdbApi.getMoviesList(movieType.popular, {params});\r\n                setMovies(response.results)\r\n                console.log(response)\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n\r\n        }\r\n        getMovies();\r\n    },[])\r\n    return (\r\n        <Swiper className=\"mySwiper\" \r\n        modules={[Autoplay]}\r\n        grabCursor={true}\r\n        spaceBetween={0}\r\n        slidesPerView={1}\r\n        >\r\n            {movies.map((movie, idx) => (\r\n                <SwiperSlide key={idx}>\r\n                    {({ isActive }) => (\r\n                    <img src={apiConfig.originalImage(item.backdrop_path)} alt=\"\" />\r\n                    )}\r\n                </SwiperSlide>\r\n            ))}\r\n        </Swiper>\r\n    )\r\n}\r\n\r\nexport default HeroSlide\r\n"]},"metadata":{},"sourceType":"module"}