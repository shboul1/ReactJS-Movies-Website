{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/i5-10400f/Desktop/movies-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Users/i5-10400f/Desktop/movies-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _objectSpread from\"C:/Users/i5-10400f/Desktop/movies-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import axios from\"axios\";import apiConfig from\"./APIConfig\";import queryString from'query-string';var axiosClient=axios.create({baseURL:apiConfig.baseURL,headers:{\"Content-Type\":\"application/json\"},paramsSerializer:function paramsSerializer(params){return queryString.stringify(_objectSpread(_objectSpread({},params),{},{api_key:apiConfig.apiKey}));}});axiosClient.interceptors.request.use(/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(config){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:return _context.abrupt(\"return\",config);case 1:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}());axiosClient.interceptors.response.use(function(response){if(response&&response.data){return response.data;}return response;},function(error){throw error;});export default axiosClient;","map":{"version":3,"sources":["C:/Users/i5-10400f/Desktop/movies-react/src/api/axiosClient.js"],"names":["axios","apiConfig","queryString","axiosClient","create","baseURL","headers","paramsSerializer","params","stringify","api_key","apiKey","interceptors","request","use","config","response","data","error"],"mappings":"sdAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,SAAP,KAAsB,aAAtB,CACA,MAAOC,CAAAA,WAAP,KAAwB,cAAxB,CAEA,GAAMC,CAAAA,WAAW,CAAGH,KAAK,CAACI,MAAN,CAAa,CAC7BC,OAAO,CAAEJ,SAAS,CAACI,OADU,CAE7BC,OAAO,CAAE,CACL,eAAgB,kBADX,CAFoB,CAK7BC,gBAAgB,CAAE,0BAAAC,MAAM,QAAIN,CAAAA,WAAW,CAACO,SAAZ,gCAA0BD,MAA1B,MAAkCE,OAAO,CAAET,SAAS,CAACU,MAArD,GAAJ,EALK,CAAb,CAApB,CAQAR,WAAW,CAACS,YAAZ,CAAyBC,OAAzB,CAAiCC,GAAjC,0FAAqC,iBAAOC,MAAP,kJAAkBA,MAAlB,wDAArC,gEACAZ,WAAW,CAACS,YAAZ,CAAyBI,QAAzB,CAAkCF,GAAlC,CAAsC,SAACE,QAAD,CAAc,CAChD,GAAGA,QAAQ,EAAIA,QAAQ,CAACC,IAAxB,CAA8B,CAC1B,MAAOD,CAAAA,QAAQ,CAACC,IAAhB,CACH,CACD,MAAOD,CAAAA,QAAP,CACH,CALD,CAKG,SAACE,KAAD,CAAW,CACV,KAAMA,CAAAA,KAAN,CACH,CAPD,EASA,cAAef,CAAAA,WAAf","sourcesContent":["import axios from \"axios\";\r\nimport apiConfig from \"./APIConfig\";\r\nimport queryString from 'query-string'\r\n\r\nconst axiosClient = axios.create({\r\n    baseURL: apiConfig.baseURL,\r\n    headers: {\r\n        \"Content-Type\": \"application/json\"\r\n    },\r\n    paramsSerializer: params => queryString.stringify({...params, api_key: apiConfig.apiKey})\r\n})\r\n\r\naxiosClient.interceptors.request.use(async (config) => config);\r\naxiosClient.interceptors.response.use((response) => {\r\n    if(response && response.data) {\r\n        return response.data\r\n    }\r\n    return response;\r\n}, (error) => {\r\n    throw error;\r\n})\r\n\r\nexport default axiosClient;"]},"metadata":{},"sourceType":"module"}