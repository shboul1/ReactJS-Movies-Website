{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\i5-10400f\\\\Desktop\\\\movies-react\\\\src\\\\components\\\\HeroSlide\\\\HeroSlide.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport SwiperCore, { Autoplay } from 'swiper';\nimport { Swiper, SwiperSlide } from 'swiper/react';\nimport 'swiper/swiper-bundle.min.css';\nimport 'swiper/swiper.min.css';\nimport tmdbApi, { category, movieType } from '../../api/tmdbAPI';\nimport apiConfig from '../../api/APIConfig';\nimport Button from '../Button/Button';\nimport \"./HeroSlide.scss\";\nimport { useHistory } from 'react-router';\nimport Modal, { ModalContent } from '../Modal/Modal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst HeroSlide = () => {\n  _s();\n\n  const [movies, setMovies] = useState([]);\n  useEffect(() => {\n    const getMovies = async () => {\n      const params = {\n        page: 1\n      };\n\n      try {\n        const response = await tmdbApi.getMoviesList(movieType.popular, {\n          params\n        });\n        setMovies(response.results.slice(1, 10));\n        console.log(response);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    getMovies();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"hero-slide\",\n    children: /*#__PURE__*/_jsxDEV(Swiper, {\n      modules: [Autoplay],\n      grabCursor: true,\n      spaceBetween: 0,\n      slidesPerView: 1,\n      autoplay: {\n        delay: 3000\n      },\n      children: movies.map((item, i) => /*#__PURE__*/_jsxDEV(SwiperSlide, {\n        children: ({\n          isActive\n        }) => /*#__PURE__*/_jsxDEV(HeroSlideItem, {\n          item: item\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 33\n        }, this)\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n\n_s(HeroSlide, \"MO6b3PSP3RIUqZ8gtSrBZBVtBbs=\");\n\n_c = HeroSlide;\n\nconst HeroSlideItem = props => {\n  _s2();\n\n  let hisrory = useHistory();\n  const item = props.item;\n  const background = apiConfig.originalImage(item.backdrop_path ? item.backdrop_path : item.poster_path);\n  const poster = apiConfig.w500Image(item.poster_path);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"hero-slide\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie\",\n      style: {\n        backgroundImage: `url(${background})`\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movie-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"movie-desc\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"movie-title\",\n            children: item.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"movie-overview\",\n            children: item.overview\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"buttons\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => hisrory.push('/movie/' + item.id),\n              children: \"Watch Now\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              btnstyle: \"btn--outlined\",\n              children: \"Watch Trailer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"movie-poster\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: poster,\n            alt: item.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n};\n\n_s2(HeroSlideItem, \"JdRvKuhMmRWQtVv8IgVX1b80ssM=\", false, function () {\n  return [useHistory];\n});\n\n_c2 = HeroSlideItem;\n\nconst TrailerModal = props => {\n  const item = props.item;\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    active: false,\n    id: `modal_${item.id}`,\n    children: /*#__PURE__*/_jsxDEV(ModalContent, {\n      children: \"aa\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 9\n  }, this);\n};\n\n_c3 = TrailerModal;\nexport default HeroSlide;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"HeroSlide\");\n$RefreshReg$(_c2, \"HeroSlideItem\");\n$RefreshReg$(_c3, \"TrailerModal\");","map":{"version":3,"sources":["C:/Users/i5-10400f/Desktop/movies-react/src/components/HeroSlide/HeroSlide.jsx"],"names":["React","useState","useEffect","SwiperCore","Autoplay","Swiper","SwiperSlide","tmdbApi","category","movieType","apiConfig","Button","useHistory","Modal","ModalContent","HeroSlide","movies","setMovies","getMovies","params","page","response","getMoviesList","popular","results","slice","console","log","error","delay","map","item","i","isActive","HeroSlideItem","props","hisrory","background","originalImage","backdrop_path","poster_path","poster","w500Image","backgroundImage","title","overview","push","id","TrailerModal"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,UAAP,IAAqBC,QAArB,QAAqC,QAArC;AACA,SAAQC,MAAR,EAAgBC,WAAhB,QAAkC,cAAlC;AACA,OAAO,8BAAP;AACA,OAAO,uBAAP;AACA,OAAOC,OAAP,IAAiBC,QAAjB,EAA2BC,SAA3B,QAA2C,mBAA3C;AACA,OAAOC,SAAP,MAAsB,qBAAtB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAO,kBAAP;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,OAAOC,KAAP,IAAgBC,YAAhB,QAAoC,gBAApC;;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AAEpB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBhB,QAAQ,CAAC,EAAD,CAApC;AACAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMgB,SAAS,GAAG,YAAY;AAC1B,YAAMC,MAAM,GAAG;AAACC,QAAAA,IAAI,EAAE;AAAP,OAAf;;AACA,UAAI;AACA,cAAMC,QAAQ,GAAG,MAAMd,OAAO,CAACe,aAAR,CAAsBb,SAAS,CAACc,OAAhC,EAAyC;AAACJ,UAAAA;AAAD,SAAzC,CAAvB;AACAF,QAAAA,SAAS,CAACI,QAAQ,CAACG,OAAT,CAAiBC,KAAjB,CAAuB,CAAvB,EAAyB,EAAzB,CAAD,CAAT;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYN,QAAZ;AACH,OAJD,CAIE,OAAOO,KAAP,EAAc;AACZF,QAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;AACH;AAEJ,KAVD;;AAWAV,IAAAA,SAAS;AACZ,GAbQ,EAaP,EAbO,CAAT;AAcA,sBACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,2BACI,QAAC,MAAD;AACI,MAAA,OAAO,EAAE,CAACd,QAAD,CADb;AAEI,MAAA,UAAU,EAAE,IAFhB;AAGI,MAAA,YAAY,EAAE,CAHlB;AAII,MAAA,aAAa,EAAE,CAJnB;AAKI,MAAA,QAAQ,EAAE;AAACyB,QAAAA,KAAK,EAAE;AAAR,OALd;AAAA,gBAQQb,MAAM,CAACc,GAAP,CAAW,CAACC,IAAD,EAAOC,CAAP,kBACP,QAAC,WAAD;AAAA,kBACK,CAAC;AAAEC,UAAAA;AAAF,SAAD,kBACG,QAAC,aAAD;AAAe,UAAA,IAAI,EAAEF;AAArB;AAAA;AAAA;AAAA;AAAA;AAFR,SAAkBC,CAAlB;AAAA;AAAA;AAAA;AAAA,cADJ;AARR;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAsBH,CAvCD;;GAAMjB,S;;KAAAA,S;;AAyCN,MAAMmB,aAAa,GAAGC,KAAK,IAAI;AAAA;;AAC3B,MAAIC,OAAO,GAAGxB,UAAU,EAAxB;AACA,QAAMmB,IAAI,GAAGI,KAAK,CAACJ,IAAnB;AACA,QAAMM,UAAU,GAAG3B,SAAS,CAAC4B,aAAV,CAAwBP,IAAI,CAACQ,aAAL,GAAqBR,IAAI,CAACQ,aAA1B,GAA0CR,IAAI,CAACS,WAAvE,CAAnB;AACA,QAAMC,MAAM,GAAG/B,SAAS,CAACgC,SAAV,CAAoBX,IAAI,CAACS,WAAzB,CAAf;AACA,sBACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAuB,MAAA,KAAK,EAAE;AAACG,QAAAA,eAAe,EAAG,OAAMN,UAAW;AAApC,OAA9B;AAAA,6BACA;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA,kCACQ;AAAI,YAAA,SAAS,EAAC,aAAd;AAAA,sBAA6BN,IAAI,CAACa;AAAlC;AAAA;AAAA;AAAA;AAAA,kBADR,eAEQ;AAAG,YAAA,SAAS,EAAC,gBAAb;AAAA,sBAA+Bb,IAAI,CAACc;AAApC;AAAA;AAAA;AAAA;AAAA,kBAFR,eAGQ;AAAK,YAAA,SAAS,EAAC,SAAf;AAAA,oCACI,QAAC,MAAD;AAAQ,cAAA,OAAO,EAAE,MAAMT,OAAO,CAACU,IAAR,CAAa,YAAYf,IAAI,CAACgB,EAA9B,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI,QAAC,MAAD;AAAQ,cAAA,QAAQ,EAAC,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHR;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eASI;AAAK,UAAA,SAAS,EAAC,cAAf;AAAA,iCACI;AAAK,YAAA,GAAG,EAAEN,MAAV;AAAkB,YAAA,GAAG,EAAEV,IAAI,CAACa;AAA5B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBATJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAoBH,CAzBD;;IAAMV,a;UACYtB,U;;;MADZsB,a;;AA2BN,MAAMc,YAAY,GAAGb,KAAK,IAAI;AAC1B,QAAMJ,IAAI,GAAGI,KAAK,CAACJ,IAAnB;AAEA,sBACI,QAAC,KAAD;AAAO,IAAA,MAAM,EAAE,KAAf;AAAsB,IAAA,EAAE,EAAG,SAAQA,IAAI,CAACgB,EAAG,EAA3C;AAAA,2BACI,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH,CAVD;;MAAMC,Y;AAaN,eAAejC,SAAf","sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport SwiperCore ,{ Autoplay } from 'swiper'\r\nimport {Swiper, SwiperSlide} from 'swiper/react'\r\nimport 'swiper/swiper-bundle.min.css'\r\nimport 'swiper/swiper.min.css'\r\nimport tmdbApi, {category, movieType} from '../../api/tmdbAPI'\r\nimport apiConfig from '../../api/APIConfig'\r\nimport Button from '../Button/Button'\r\nimport \"./HeroSlide.scss\"\r\nimport { useHistory } from 'react-router';\r\nimport Modal, { ModalContent } from '../Modal/Modal'\r\n\r\nconst HeroSlide = () => {\r\n\r\n    const [movies, setMovies] = useState([])\r\n    useEffect(() => {\r\n        const getMovies = async () => {\r\n            const params = {page: 1}\r\n            try {\r\n                const response = await tmdbApi.getMoviesList(movieType.popular, {params});\r\n                setMovies(response.results.slice(1,10))\r\n                console.log(response)\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n\r\n        }\r\n        getMovies();\r\n    },[])\r\n    return (\r\n        <div className=\"hero-slide\">\r\n            <Swiper\r\n                modules={[Autoplay]}\r\n                grabCursor={true}\r\n                spaceBetween={0}\r\n                slidesPerView={1}\r\n                autoplay={{delay: 3000}}\r\n            >\r\n                {\r\n                    movies.map((item, i) => (\r\n                        <SwiperSlide key={i}>\r\n                            {({ isActive }) => (\r\n                                <HeroSlideItem item={item}/>\r\n                            )}\r\n                        </SwiperSlide>\r\n                    ))\r\n                }\r\n            </Swiper>\r\n           \r\n        </div>\r\n    );\r\n}\r\n\r\nconst HeroSlideItem = props => {\r\n    let hisrory = useHistory();\r\n    const item = props.item;\r\n    const background = apiConfig.originalImage(item.backdrop_path ? item.backdrop_path : item.poster_path)\r\n    const poster = apiConfig.w500Image(item.poster_path)\r\n    return (\r\n        <div className=\"hero-slide\">\r\n            <div className=\"movie\" style={{backgroundImage: `url(${background})`}}>\r\n            <div className=\"movie-info\">\r\n                <div className=\"movie-desc\">\r\n                        <h1 className='movie-title'>{item.title}</h1>\r\n                        <p className='movie-overview'>{item.overview}</p>\r\n                        <div className=\"buttons\">\r\n                            <Button onClick={() => hisrory.push('/movie/' + item.id)}>Watch Now</Button>\r\n                            <Button btnstyle='btn--outlined'>Watch Trailer</Button>\r\n                        </div>\r\n                </div>\r\n                <div className=\"movie-poster\">\r\n                    <img src={poster} alt={item.title} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n        </div>\r\n    )\r\n    \r\n}\r\n\r\nconst TrailerModal = props => {\r\n    const item = props.item;\r\n\r\n    return (\r\n        <Modal active={false} id={`modal_${item.id}`}>\r\n            <ModalContent >\r\n            aa\r\n            </ModalContent>\r\n        </Modal>\r\n    )\r\n}\r\n\r\n\r\nexport default HeroSlide;\r\n"]},"metadata":{},"sourceType":"module"}