{"ast":null,"code":"import _toConsumableArray from\"C:/Users/i5-10400f/Desktop/movies-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _regeneratorRuntime from\"C:/Users/i5-10400f/Desktop/movies-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Users/i5-10400f/Desktop/movies-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"C:/Users/i5-10400f/Desktop/movies-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import MovieCard from'../MovieCard/MovieCard';import tmdbApi,{movieType,tvType}from'../../api/tmdbAPI';import\"./Movies-Grid.scss\";import Button from'../Button/Button';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var MoviesGrid=function MoviesGrid(props){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),items=_useState2[0],setItems=_useState2[1];var _useState3=useState(1),_useState4=_slicedToArray(_useState3,2),page=_useState4[0],setPage=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),inputValue=_useState6[0],setInputValue=_useState6[1];var _useState7=useState(''),_useState8=_slicedToArray(_useState7,2),searchCatg=_useState8[0],setSearchCatg=_useState8[1];useEffect(function(){var getList=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var response,params;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:response=null;params={};if(!(props.category==='movies')){_context.next=8;break;}_context.next=5;return tmdbApi.getMoviesList(movieType.upcoming,{params:params});case 5:response=_context.sent;_context.next=15;break;case 8:if(!(props.category==='tvseries')){_context.next=14;break;}_context.next=11;return tmdbApi.getTvList(tvType.popular,{params:params});case 11:response=_context.sent;_context.next=15;break;case 14:return _context.abrupt(\"return\",alert('hi'));case 15:setItems(response.results);if(props.category==='movies'){setSearchCatg('movies');}else{setSearchCatg('tv');}case 17:case\"end\":return _context.stop();}}},_callee);}));return function getList(){return _ref.apply(this,arguments);};}();getList();},[props.category]);var loadMore=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var response,params;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:response=null;params={page:page+1};if(!(props.category==='movies')){_context2.next=8;break;}_context2.next=5;return tmdbApi.getMoviesList(movieType.upcoming,{params:params});case 5:response=_context2.sent;_context2.next=11;break;case 8:_context2.next=10;return tmdbApi.getTvList(tvType.popular,{params:params});case 10:response=_context2.sent;case 11:setItems([].concat(_toConsumableArray(items),_toConsumableArray(response.results)));setPage(page+1);case 13:case\"end\":return _context2.stop();}}},_callee2);}));return function loadMore(){return _ref2.apply(this,arguments);};}();return/*#__PURE__*/_jsxs(\"div\",{className:\"section\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"movie-search\",children:/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Search for a movie\",onChange:function onChange(e){return setInputValue(e.target.value);}})}),/*#__PURE__*/_jsx(\"div\",{className:\"movies-grid mb-3\",children:items&&items.filter(function(itemName){if(searchCatg==='movies'){if(inputValue===''){return itemName;}else if(itemName.title.toLowerCase().includes(inputValue.toLowerCase())){return itemName;}}else{if(inputValue===''){return itemName;}else if(itemName.name.toLowerCase().includes(inputValue.toLowerCase())){return itemName;}}}).map(function(item,i){return/*#__PURE__*/_jsx(MovieCard,{item:item,category:props.category==='movies'?'movie':'tv'},i);})}),page<500?/*#__PURE__*/_jsx(Button,{btnstyle:\"btn--outlined\",onClick:loadMore,children:\"View More\"}):\"\"]});};export default MoviesGrid;/* \r\n{items.map((item, i) => (\r\n                <MovieCard  key={i} item={item} category={props.category === 'movies' ? 'movie' : 'tv'} />\r\n            ))}\r\n\r\n*/","map":{"version":3,"sources":["C:/Users/i5-10400f/Desktop/movies-react/src/components/MoviesGrid/MoviesGrid.jsx"],"names":["React","useState","useEffect","MovieCard","tmdbApi","movieType","tvType","Button","MoviesGrid","props","items","setItems","page","setPage","inputValue","setInputValue","searchCatg","setSearchCatg","getList","response","params","category","getMoviesList","upcoming","getTvList","popular","alert","results","loadMore","e","target","value","filter","itemName","title","toLowerCase","includes","name","map","item","i"],"mappings":"6nBAAA,MAAOA,CAAAA,KAAP,EAAeC,QAAf,CAAyBC,SAAzB,KAAyC,OAAzC,CACA,MAAOC,CAAAA,SAAP,KAAsB,wBAAtB,CACA,MAAOC,CAAAA,OAAP,EAAiBC,SAAjB,CAA4BC,MAA5B,KAAyC,mBAAzC,CACA,MAAO,oBAAP,CACA,MAAOC,CAAAA,MAAP,KAAmB,kBAAnB,C,wFACA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAAAC,KAAK,CAAI,CACxB,cAA0BR,QAAQ,CAAC,EAAD,CAAlC,wCAAOS,KAAP,eAAcC,QAAd,eACA,eAAwBV,QAAQ,CAAC,CAAD,CAAhC,yCAAOW,IAAP,eAAaC,OAAb,eACA,eAAoCZ,QAAQ,CAAC,EAAD,CAA5C,yCAAOa,UAAP,eAAmBC,aAAnB,eACA,eAAoCd,QAAQ,CAAC,EAAD,CAA5C,yCAAOe,UAAP,eAAmBC,aAAnB,eACAf,SAAS,CAAC,UAAM,CACZ,GAAMgB,CAAAA,OAAO,0FAAG,uJACRC,QADQ,CACG,IADH,CAENC,MAFM,CAEG,EAFH,MAGTX,KAAK,CAACY,QAAN,GAAmB,QAHV,gDAISjB,CAAAA,OAAO,CAACkB,aAAR,CAAsBjB,SAAS,CAACkB,QAAhC,CAA0C,CAACH,MAAM,CAANA,MAAD,CAA1C,CAJT,QAIRD,QAJQ,kDAKDV,KAAK,CAACY,QAAN,GAAmB,UALlB,kDAMSjB,CAAAA,OAAO,CAACoB,SAAR,CAAkBlB,MAAM,CAACmB,OAAzB,CAAkC,CAACL,MAAM,CAANA,MAAD,CAAlC,CANT,SAMRD,QANQ,8EAQDO,KAAK,CAAC,IAAD,CARJ,UAUZf,QAAQ,CAACQ,QAAQ,CAACQ,OAAV,CAAR,CACA,GAAGlB,KAAK,CAACY,QAAN,GAAmB,QAAtB,CAAgC,CAC5BJ,aAAa,CAAC,QAAD,CAAb,CACH,CAFD,IAEO,CACHA,aAAa,CAAC,IAAD,CAAb,CACH,CAfW,uDAAH,kBAAPC,CAAAA,OAAO,0CAAb,CAiBAA,OAAO,GACV,CAnBQ,CAmBP,CAACT,KAAK,CAACY,QAAP,CAnBO,CAAT,CAoBA,GAAMO,CAAAA,QAAQ,2FAAG,4JACLT,QADK,CACM,IADN,CAEHC,MAFG,CAEM,CACXR,IAAI,CAAEA,IAAI,CAAG,CADF,CAFN,MAKNH,KAAK,CAACY,QAAN,GAAmB,QALb,kDAMYjB,CAAAA,OAAO,CAACkB,aAAR,CAAsBjB,SAAS,CAACkB,QAAhC,CAA0C,CAACH,MAAM,CAANA,MAAD,CAA1C,CANZ,QAMLD,QANK,uEAQYf,CAAAA,OAAO,CAACoB,SAAR,CAAkBlB,MAAM,CAACmB,OAAzB,CAAkC,CAACL,MAAM,CAANA,MAAD,CAAlC,CARZ,SAQLD,QARK,wBAUTR,QAAQ,8BAAKD,KAAL,qBAAeS,QAAQ,CAACQ,OAAxB,GAAR,CACAd,OAAO,CAACD,IAAI,CAAG,CAAR,CAAP,CAXS,yDAAH,kBAARgB,CAAAA,QAAQ,2CAAd,CAaA,mBACI,aAAK,SAAS,CAAC,SAAf,wBACA,YAAK,SAAS,CAAC,cAAf,uBACI,cAAO,IAAI,CAAC,MAAZ,CAAmB,WAAW,CAAC,oBAA/B,CAAoD,QAAQ,CAAE,kBAACC,CAAD,QAAOd,CAAAA,aAAa,CAACc,CAAC,CAACC,MAAF,CAASC,KAAV,CAApB,EAA9D,EADJ,EADA,cAIA,YAAK,SAAS,CAAC,kBAAf,UACKrB,KAAK,EACFA,KAAK,CAACsB,MAAN,CAAa,SAAAC,QAAQ,CAAI,CACrB,GAAIjB,UAAU,GAAK,QAAnB,CAA6B,CACzB,GAAGF,UAAU,GAAK,EAAlB,CAAsB,CAClB,MAAOmB,CAAAA,QAAP,CACH,CAFD,IAEO,IAAIA,QAAQ,CAACC,KAAT,CAAeC,WAAf,GAA6BC,QAA7B,CAAsCtB,UAAU,CAACqB,WAAX,EAAtC,CAAJ,CAAoE,CACvE,MAAOF,CAAAA,QAAP,CACH,CACJ,CAND,IAMO,CACH,GAAGnB,UAAU,GAAK,EAAlB,CAAsB,CAClB,MAAOmB,CAAAA,QAAP,CACH,CAFD,IAEO,IAAIA,QAAQ,CAACI,IAAT,CAAcF,WAAd,GAA4BC,QAA5B,CAAqCtB,UAAU,CAACqB,WAAX,EAArC,CAAJ,CAAmE,CACtE,MAAOF,CAAAA,QAAP,CACH,CACJ,CAEJ,CAfD,EAeGK,GAfH,CAeO,SAACC,IAAD,CAAOC,CAAP,qBACH,KAAC,SAAD,EAAoB,IAAI,CAAED,IAA1B,CAAgC,QAAQ,CAAE9B,KAAK,CAACY,QAAN,GAAmB,QAAnB,CAA8B,OAA9B,CAAwC,IAAlF,EAAiBmB,CAAjB,CADG,EAfP,CAFR,EAJA,CA0BE5B,IAAI,CAAG,GAAP,cACE,KAAC,MAAD,EAAQ,QAAQ,CAAC,eAAjB,CAAiC,OAAO,CAAEgB,QAA1C,uBADF,CAC2E,EA3B7E,GADJ,CAgCH,CAtED,CAwEA,cAAepB,CAAAA,UAAf,CAIA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React,{ useState, useEffect} from 'react'\r\nimport MovieCard from '../MovieCard/MovieCard';\r\nimport tmdbApi, {movieType, tvType} from '../../api/tmdbAPI';\r\nimport \"./Movies-Grid.scss\"\r\nimport Button from '../Button/Button';\r\nconst MoviesGrid = props => {\r\n    const [items, setItems] = useState([]);\r\n    const [page, setPage] = useState(1);\r\n    const [inputValue, setInputValue] = useState(\"\");\r\n    const [searchCatg, setSearchCatg] = useState('')\r\n    useEffect(() => {\r\n        const getList = async () => {\r\n            let response = null;\r\n            const params = {};\r\n            if(props.category === 'movies') {\r\n                response = await tmdbApi.getMoviesList(movieType.upcoming, {params})\r\n            } else if (props.category === 'tvseries') {\r\n                response = await tmdbApi.getTvList(tvType.popular, {params})\r\n            } else {\r\n                return alert('hi')\r\n            }\r\n            setItems(response.results)\r\n            if(props.category === 'movies') {\r\n                setSearchCatg('movies')\r\n            } else {\r\n                setSearchCatg('tv');\r\n            }\r\n        }\r\n        getList();\r\n    },[props.category])\r\n    const loadMore = async () => {\r\n            let response = null;\r\n            const params = {\r\n                page: page + 1\r\n            };\r\n            if(props.category === 'movies') {\r\n                response = await tmdbApi.getMoviesList(movieType.upcoming, {params})\r\n            } else {\r\n                response = await tmdbApi.getTvList(tvType.popular, {params})\r\n            }\r\n            setItems([...items, ...response.results])\r\n            setPage(page + 1)\r\n    }\r\n    return (\r\n        <div className='section'>\r\n        <div className=\"movie-search\">\r\n            <input type=\"text\" placeholder='Search for a movie' onChange={(e) => setInputValue(e.target.value)} />\r\n        </div>\r\n        <div className='movies-grid mb-3'>\r\n            {items &&\r\n                items.filter(itemName => {\r\n                    if (searchCatg === 'movies') {\r\n                        if(inputValue === '') {\r\n                            return itemName;\r\n                        } else if (itemName.title.toLowerCase().includes(inputValue.toLowerCase())){\r\n                            return itemName\r\n                        }\r\n                    } else {\r\n                        if(inputValue === '') {\r\n                            return itemName;\r\n                        } else if (itemName.name.toLowerCase().includes(inputValue.toLowerCase())){\r\n                            return itemName\r\n                        }\r\n                    }\r\n\r\n                }).map((item, i) => (\r\n                    <MovieCard  key={i} item={item} category={props.category === 'movies' ? 'movie' : 'tv'} />\r\n                ))\r\n            }\r\n        </div>\r\n        { page < 500 ? \r\n            <Button btnstyle='btn--outlined' onClick={loadMore}>View More</Button> : \"\"\r\n        }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MoviesGrid\r\n\r\n\r\n\r\n/* \r\n{items.map((item, i) => (\r\n                <MovieCard  key={i} item={item} category={props.category === 'movies' ? 'movie' : 'tv'} />\r\n            ))}\r\n\r\n*/ "]},"metadata":{},"sourceType":"module"}